#! /usr/bin/env groovy
pipeline {
agent any 
stages {
  stage ('checkout code') {
      steps {
          sh ' echo "checkout passed" '
          }
        }
  stage ('Build and test') {
      steps {
          sh ' cd Simp_java_code && mvn clean package ' 
          }
        }
  stage ('build and push docker image') {
       environment {
            DOCKER_IMAGE = "karthickdocker28/javacoder:${BUILD_NUMBER}"
            REGISTRY_CREDENTIALS = credentials('dockerhub')
          }
          steps {
            script {
                sh 'cd Simp_java_code && docker build -t ${DOCKER_IMAGE} --platform linux/amd64 .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "dockerhub")
                dockerImage.push()
             }
       }
   } 

  stage ('updating manifestfile') {
          environment {
                GIT_USER_NAME= "Praveenkarthick28"
                GIT_REPO_NAME= "myrepo"
               }
                steps { 
                   sh '''
                     git config user.email "karthikjeeva619@gmail.com"
                     git config user.name "praveen"
                     sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" simp_java_code/simp_java_code_manifests/deployment.yml
                     git add simp_java_code/simp_java_code_manifest/deployment.yml && git commit -m " updating version: $BUILD_NUMBER"
                     git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                     echo " succesfully updated the new image "
                   sh '''
          }
        }
  stage ('deploying') {
      steps {
          sh 'cd simp_java_code/simp_java_code_manifests/ && kubectl apply -f deployment deployment.yml'
          sh 'kubectl apply -f svc service.yml'
            }
        }
    }
}
